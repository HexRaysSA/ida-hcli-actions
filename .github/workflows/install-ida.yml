name: Test Install IDA Action

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-action:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,  platform: linux,   installer_id: "release/9.1/ida-pro/ida-pro_91_x64linux.run" }
          - { os: windows-latest, platform: windows, installer_id: "release/9.1/ida-pro/ida-pro_91_x64win.exe" }
          - { os: macos-latest,   platform: macos,   installer_id: "release/9.1/ida-pro/ida-pro_91_armmac.app.zip" }
      fail-fast: false

    name: Test IDA 9.1 on ${{ matrix.platform }}

    steps:
    - name: Checkout action code
      uses: actions/checkout@v4

    # Test your local action using relative path
    - name: Test Install IDA Pro Action
      id: ida-install
      uses: ./install-ida  # This runs the action.yml in the install-ida directory
      with:
        installer-id: ${{ matrix.installer_id }}
        license-id: ${{ secrets.IDA_LICENSE_ID }}
        api-key: ${{ secrets.HCLI_API_KEY }}

    # Verify the installation worked
    - name: Verify Installation
      shell: bash
      run: |
        echo "Checking action outputs..."
        echo "ida-dir: ${{ steps.ida-install.outputs.ida-dir }}"
        echo "ida-bin: ${{ steps.ida-install.outputs.ida-bin }}"
        
        echo "Checking if IDA directory exists..."
        if [ -d "${{ steps.ida-install.outputs.ida-dir }}" ]; then
          echo "IDA directory exists at: ${{ steps.ida-install.outputs.ida-dir }}"
          echo "Contents:"
          ls -la "${{ steps.ida-install.outputs.ida-dir }}"
        else
          echo "IDA directory not found at: ${{ steps.ida-install.outputs.ida-dir }}"
          exit 1
        fi
        
        echo "Checking if IDA binary exists..."
        if [ -f "${{ steps.ida-install.outputs.ida-bin }}" ] || [ -f "${{ steps.ida-install.outputs.ida-bin }}.exe" ]; then
          echo "IDA binary found at: ${{ steps.ida-install.outputs.ida-bin }}"
        else
          echo "IDA binary not found at: ${{ steps.ida-install.outputs.ida-bin }}"
          exit 1
        fi

    # Test basic IDA functionality by checking version (if tools not cleaned)
    - name: Test basic IDA functionality
      shell: bash
      run: |
        echo "Testing basic IDA setup..."
        echo "ida-dir: ${{ steps.ida-install.outputs.ida-dir }}"
        echo "ida-bin: ${{ steps.ida-install.outputs.ida-bin }}"
        
        # Try to get IDA version (works on all platforms)
        if [ -f "${{ steps.ida-install.outputs.ida-bin }}" ]; then
          echo "Testing IDA binary..."
          # Most IDA versions support --help or similar
          "${{ steps.ida-install.outputs.ida-bin }}" --help || echo "IDA binary exists but help not available"
        elif [ -f "${{ steps.ida-install.outputs.ida-bin }}.exe" ]; then
          echo "Testing IDA binary (Windows)..."
          "${{ steps.ida-install.outputs.ida-bin }}.exe" --help || echo "IDA binary exists but help not available"
        else
          echo "IDA binary check - file exists verification passed earlier"
        fi