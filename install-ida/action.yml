name: 'Install IDA Pro'
description: 'Download and install IDA Pro using Hex-Rays Command Line Interface (hcli) - handles all dependencies automatically'
author: 'HexRaysSA'

inputs:
  api-key:
    description: 'HCLI Api Key'
    required: true
  installer-id:
    description: 'IDA Pro installer ID (e.g., "release/9.1/ida-pro/ida-pro_91_x64linux.run")'
    required: true
  license-id:
    description: 'IDA Pro license ID'
    required: true
  hcli-version-specifier:
    description: 'Version specifier for ida-hcli to install (e.g., ">=0.6.0", "==0.6.0", "~=0.6.0")'
    required: false
    default: '>=0.6.0'
  clean:
    description: 'Clean up installation tools after IDA installation (true=clean, false=keep tools)'
    required: false
    default: 'true'
  python-version:
    description: 'Python version to install'
    required: false
    default: '3.10'

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install uv
      shell: bash
      run: |
        echo "Installing uv..."
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
        # Verify uv installation
        export PATH="$HOME/.cargo/bin:$PATH"
        uv --version

    - name: Install Hex-Rays CLI
      shell: bash
      run: |
        echo "Installing ida-hcli..."
        export PATH="$HOME/.cargo/bin:$PATH"
        uv tool install "ida-hcli${{ inputs.hcli-version-specifier }}"
        # Verify hcli installation
        hcli --version

    - name: Create IDA installation directory
      shell: bash
      run: |
        echo "Creating installation directory..."
        
        # Always use temp directory
        IDADIR="${{ runner.temp }}/opt/ida"
        
        echo "IDADIR=$IDADIR" >> $GITHUB_ENV
        echo "Using IDA directory: $IDADIR"
        
        # Create directory (no sudo needed for temp directory)
        mkdir -p "$IDADIR"

    - name: Download and install IDA Pro
      shell: bash
      run: |
        echo "Downloading and installing IDA Pro..."
        export PATH="$HOME/.cargo/bin:$PATH"
        
        hcli ida install -d "${{ inputs.installer-id }}" -l "${{ inputs.license-id }}" -i "$IDADIR"
        
        echo "IDA Pro installed successfully!"
        echo "Installation directory: $IDADIR"
        
        # Verify installation
        if [ -d "$IDADIR" ] && [ "$(ls -A "$IDADIR")" ]; then
          echo "Installation contents:"
          ls -la "$IDADIR"
        else
          echo "Installation directory appears to be empty"
          exit 1
        fi
        
        # Set IDABIN environment variable based on platform
        if [[ "$RUNNER_OS" == "macOS" ]]; then
          IDABIN="$IDADIR/Contents/MacOS/ida"
        else
          IDABIN="$IDADIR/ida"
        fi
        
        echo "IDABIN=$IDABIN" >> $GITHUB_ENV
        echo "IDABIN environment variable set to $IDABIN"
      env:
        HCLI_API_KEY: ${{ inputs.api-key }}

    - name: Clean up installation tools
      if: inputs.clean == 'true'
      shell: bash
      run: |
        echo "Cleaning up installation tools..."
        
        # Remove uv and cargo bin directory
        if [ -d "$HOME/.cargo/bin" ]; then
          echo "Removing uv and cargo tools..."
          rm -rf "$HOME/.cargo"
        fi
        
        # Remove hcli from PATH (if it was added by uv tool install)
        # Note: uv tool install typically installs to ~/.local/bin or similar
        if [ -d "$HOME/.local/bin" ]; then
          echo "Cleaning up local bin directory..."
          rm -f "$HOME/.local/bin/hcli"
        fi
        
        # Clean up any Python cache/temp files
        echo "Cleaning up Python cache files..."
        find /tmp -name "pip-*" -type d -exec rm -rf {} + 2>/dev/null || true
        find /tmp -name "tmp*" -name "*python*" -type d -exec rm -rf {} + 2>/dev/null || true
        
        # Remove Python from PATH if it was our installation
        # Note: This doesn't uninstall Python itself as other steps might need it
        # but removes our specific additions
        echo "Installation cleanup completed - only IDA Pro remains at $IDADIR"

    - name: Keep installation tools available
      if: inputs.clean == 'false'
      shell: bash
      run: |
        echo "Installation tools kept available:"
        echo "- Python ${{ inputs.python-version }} (via actions/setup-python)"
        echo "- uv (in ~/.cargo/bin)"
        echo "- hcli (in ~/.local/bin or uv tools)"
        echo "- IDA Pro (in $IDADIR)"
        echo ""
        echo "Tools are available for subsequent workflow steps."

branding:
  icon: 'download'
  color: 'red'